name: Build

on: [push]

jobs:
  build-and-test:

    runs-on: windows-latest
    permissions:
      contents: read
      statuses: write

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Build
      run: dotnet build -c Release RoomexEarth.sln

    - name: Test Algorithms
      run:  |
        $workspace = $env:GITHUB_WORKSPACE
        dotnet test RoomexEarth.Algorithms.Tests/RoomexEarth.Algorithms.Tests.csproj -c Release --no-build --framework net8.0 -l "console;verbosity=normal" --results-directory:"$workspace/TestResults" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$workspace/TestResults/alg.xml /p:Include=[RoomexEarth.Algorithms]* /p:Threshold=100

    - name: Test Logic
      run:  |
        $workspace = $env:GITHUB_WORKSPACE
        dotnet test RoomexEarth.Logic.Tests/RoomexEarth.Logic.Tests.csproj -c Release --no-build --framework net8.0 -l "console;verbosity=normal" --results-directory:"$workspace/TestResults" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$workspace/TestResults/logic.xml /p:Include=[RoomexEarth.Logic]* /p:Threshold=100

    - name: Test Api
      run:  |
        $workspace = $env:GITHUB_WORKSPACE
        dotnet test RoomexEarth.Api.Tests/RoomexEarth.Api.Tests.csproj -c Release --no-build --framework net8.0 -l "console;verbosity=normal" --results-directory:"$workspace/TestResults" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$workspace/TestResults/api.xml /p:Include=[RoomexEarth.Api]* /p:Exclude=[*]Program /p:Threshold=100

    - name: Report Generator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.1.26
      with:
        reports: TestResults/alg.xml;TestResults/logic.xml;TestResults/api.xml
        targetdir: TestResults/CoverageReport
        reporttypes: TextSummary

    - name: Output Coverage Report
      run:  |
        $workspace = $env:GITHUB_WORKSPACE
        $report = Get-Content "$workspace/TestResults/CoverageReport/Summary.txt" -Raw
        Write-Host $report
